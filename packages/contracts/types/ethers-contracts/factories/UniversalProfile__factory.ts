/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  UniversalProfile,
  UniversalProfileInterface,
} from "../UniversalProfile";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "operation",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "ContractCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "dataKey",
        type: "bytes32",
      },
    ],
    name: "DataChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "operation",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "Executed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "typeId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes",
        name: "returnedValue",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "receivedData",
        type: "bytes",
      },
    ],
    name: "UniversalReceiver",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "ValueReceived",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "operation",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "dataKeys",
        type: "bytes32[]",
      },
    ],
    name: "getData",
    outputs: [
      {
        internalType: "bytes[]",
        name: "dataValues",
        type: "bytes[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dataKey",
        type: "bytes32",
      },
    ],
    name: "getData",
    outputs: [
      {
        internalType: "bytes",
        name: "dataValue",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dataHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "isValidSignature",
    outputs: [
      {
        internalType: "bytes4",
        name: "magicValue",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "dataKeys",
        type: "bytes32[]",
      },
      {
        internalType: "bytes[]",
        name: "dataValues",
        type: "bytes[]",
      },
    ],
    name: "setData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dataKey",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "dataValue",
        type: "bytes",
      },
    ],
    name: "setData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "typeId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "universalReceiver",
    outputs: [
      {
        internalType: "bytes",
        name: "returnValue",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x6001600160401b036080601f19601f6200208c388190039182018316840191858311858410176200029857808592604094855283396020948591810103126200029357516001600160a01b03939084811690819003620002935760009485549081169081830362000255575b50505081518281018181108782111762000241578352600481526355f212eb60e11b828201527feafec4d89fa9619884b60000abe425d64acd861a49b8ddf5c0b6962110481f38938486526001918284528487209381519889116200022d5784548481811c9116801562000222575b828210146200020e57601f8111620001c3575b508092601f8a116001146200014d575050968092819288996000805160206200206c83398151915298999462000141575b50501b916000199060031b1c19161790555b519283a2611dbd9081620002af8239f35b0151925038806200011e565b899391929916988589528289209289905b8b8210620001ab575050836000805160206200206c83398151915298999a1062000191575b505050811b01905562000130565b015160001960f88460031b161c1916905538808062000183565b8087859682949686015181550195019301906200015e565b858952818920601f8b0160051c810191838c1062000203575b601f0160051c019085905b828110620001f7575050620000ed565b8a8155018590620001e7565b9091508190620001dc565b634e487b7160e01b89526022600452602489fd5b90607f1690620000da565b634e487b7160e01b88526041600452602488fd5b634e487b7160e01b86526041600452602486fd5b6001600160a01b0319168217865583517f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908790a33880806200006b565b600080fd5b634e487b7160e01b600052604160045260246000fdfe60806040526004361015610018575b610016611781565b005b60003560e01c806301ffc9a71461011c57806314a6e293146101135780631626ba7e1461010a57806344c028fe146101015780634e3e6e9c146100f85780634e71e0c8146100ef57806354f6127f146100e65780636bb56a14146100dd578063715018a6146100d45780637f23690c146100cb5780638da5cb5b146100c2578063e30c3978146100b95763f2fde38b0361000e576100b4610c59565b61000e565b506100b4610c2f565b506100b4610c05565b506100b4610be5565b506100b4610b70565b506100b4610a02565b506100b46109ce565b506100b4610933565b506100b461086f565b506100b4610532565b506100b4610469565b506100b461037f565b506100b461013c565b6001600160e01b031981160361013757565b600080fd5b5034610137576020366003190112610137576101a060043561015d81610125565b63ffffffff60e01b16630b135d3f60e11b811490811561020b575b81156101fa575b81156101e9575b81156101a4575b5060405190151581529081906020820190565b0390f35b631c537ddf60e21b8114915081156101be575b503861018d565b632260147f60e11b8114915081156101d8575b50386101b7565b6301ffc9a760e01b149050386101d1565b6306912f8b60e51b81149150610186565b631aed5a8560e21b8114915061017f565b6313477fd160e31b81149150610178565b50634e487b7160e01b600052604160045260246000fd5b606081019081106001600160401b0382111761024e57604052565b61025661021c565b604052565b90601f801991011681019081106001600160401b0382111761024e57604052565b6020906001600160401b038111610295575b60051b0190565b61029d61021c565b61028e565b81601f82011215610137578035916102b98361027c565b926102c7604051948561025b565b808452602092838086019260051b820101928311610137578301905b8282106102f1575050505090565b813581529083019083016102e3565b6020906001600160401b03811161031d575b601f01601f19160190565b61032561021c565b610312565b92919261033682610300565b91610344604051938461025b565b829481845281830111610137578281602093846000960137010152565b9080601f830112156101375781602061037c9335910161032a565b90565b5034610137576040366003190112610137576001600160401b03600435818111610137576103b19036906004016102a2565b60249081358381116101375736602382011215610137578060040135926103d78461027c565b936103e5604051958661025b565b808552602095828787019260051b8501019336851161013757838101925b858410610414576100168888611113565b833583811161013757899161042f8392883691870101610361565b815201930192610403565b9060406003198301126101375760043591602435906001600160401b0382116101375761037c91600401610361565b503461013757602061048361047d3661043a565b906117ec565b6040516001600160e01b03199091168152f35b602435906001600160a01b038216820361013757565b9181601f84011215610137578235916001600160401b038311610137576020838186019501011161013757565b60005b8381106104ec5750506000910152565b81810151838201526020016104dc565b90602091610515815180928185528580860191016104d9565b601f01601f1916010190565b90602061037c9281815201906104fc565b5060803660031901126101375760043561054a610496565b906044356064356001600160401b0381116101375761056d9036906004016104ac565b93909261057861141c565b5a81610608576105f86105d16101a0976105cb7f4810874456b8e6487bd861375cf6abd8e1c8bb5858c8ce36a86a04dabfac199e946105b989471015610d1c565b6105c436848c61032a565b8989610f36565b97610e19565b6040516001600160e01b031990911681526001600160a01b03909416939081906020820190565b0390a45b60405191829182610521565b600382036106625761065a6105d16101a0976105cb7f4810874456b8e6487bd861375cf6abd8e1c8bb5858c8ce36a86a04dabfac199e946106498915610e45565b61065436848c61032a565b88610f5f565b0390a46105fc565b600482036106b45761065a6105d16101a0976105cb7f4810874456b8e6487bd861375cf6abd8e1c8bb5858c8ce36a86a04dabfac199e946106a38915610da7565b6106ae36848c61032a565b88610f78565b509092936001821460001461075b576101a0946001600160a01b03946106fe926106f892916106e590881615610c9e565b6106f186471015610d1c565b369161032a565b83610f91565b6040516bffffffffffffffffffffffff19606083901b1660208201526014815290939061072c60348261025b565b9316907f01c42bd7e97a66166063b02fce6924e6656b6c2c61966630165095c4fb0b7b2f6000604051a46105fc565b600282036107cd576101a0946001600160a01b03946106fe926107c69161078490881615610c9e565b61079086471015610d1c565b6107c16107af61079f83610d8e565b6107aa36858861032a565b61171a565b936107b983610d8e565b92369161032a565b61169a565b9084611559565b60405162461bcd60e51b815260206004820152601460248201527357726f6e67206f7065726174696f6e207479706560601b6044820152606490fd5b0390fd5b602080820190808352835180925260408301928160408460051b8301019501936000915b8483106108415750505050505090565b909192939495848061085f600193603f198682030187528a516104fc565b9801930193019194939290610831565b503461013757602080600319360112610137576004356001600160401b038111610137576108a19036906004016102a2565b8051916108ad8361027c565b926108bb604051948561025b565b8084526108ca601f199161027c565b0160005b8181106109245750505060005b815181101561091657806108fa6108f4600193856110e9565b5161103c565b61090482866110e9565b5261090f81856110e9565b50016108db565b604051806101a0858261080d565b606085820184015282016108ce565b5034610137576000366003190112610137576002546001600160a01b0316338190036109745761096290611474565b600280546001600160a01b0319169055005b60405162461bcd60e51b815260206004820152602c60248201527f4f776e61626c65436c61696d3a2063616c6c6572206973206e6f74207468652060448201526b3832b73234b733a7bbb732b960a11b6064820152608490fd5b5034610137576020366003190112610137576101a06109ee60043561103c565b6040519182916020835260208301906104fc565b506040366003190112610137576024356004356001600160401b03821161013757610a346101a09236906004016104ac565b7f0cfc51aec37c55a4d0b1a65c6255c4bf2fbdf6277f3cc0730c45b828b6db8b4760005260016020526060929091610a8b7f47a9b3ef91c9033a7816ed37415fa324799fd03f9afba0a85f49c2c79de073c46111ef565b601481511015610ad4575b507f9c3ba68eb5742b8e3961aea0afc7371a71bf433c8a67a831803b64c064a178c26105f8610ac486611d50565b9460405191829133953484611d70565b610ae0610ae691611c74565b60601c90565b610aef81611bbe565b15610a9657604051635122dded60e11b81529194506000908290818381610b1d898b8a343360048701611d25565b03926001600160a01b03165af1908115610b63575b600091610b42575b509238610a96565b610b5d913d8091833e610b55818361025b565b810190611ca6565b38610b3a565b610b6b6117df565b610b32565b503461013757600080600319360112610be257610b8b61141c565b805481906001600160a01b0381169081610ba6575b82604051f35b6001600160601b0360a01b1682557f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e082604051a3803880610ba0565b80fd5b503461013757610016610bf73661043a565b90610c0061141c565b6112e7565b5034610137576000366003190112610137576000546040516001600160a01b039091168152602090f35b5034610137576000366003190112610137576002546040516001600160a01b039091168152602090f35b5034610137576020366003190112610137576004356001600160a01b0381169081900361013757610c8861141c565b600280546001600160a01b031916919091179055005b15610ca557565b60405162461bcd60e51b815260206004820152604360248201527f455243373235583a20435245415445206f7065726174696f6e7320726571756960448201527f726520746865207265636569766572206164647265737320746f20626520656d60648201526270747960e81b608482015260a490fd5b15610d2357565b60405162461bcd60e51b815260206004820152602660248201527f455243373235583a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608490fd5b50634e487b7160e01b600052601160045260246000fd5b601f19810191908211610d9d57565b610da5610d77565b565b15610dae57565b60405162461bcd60e51b815260206004820152603a60248201527f455243373235583a2063616e6e6f74207472616e736665722076616c7565207760448201527f697468206f7065726174696f6e2044454c454741544543414c4c0000000000006064820152608490fd5b6001600160e01b03199035818116939260048110610e3657505050565b60040360031b82901b16169150565b15610e4c57565b60405162461bcd60e51b815260206004820152603860248201527f455243373235583a2063616e6e6f74207472616e736665722076616c7565207760448201527f697468206f7065726174696f6e2053544154494343414c4c00000000000000006064820152608490fd5b3d15610ee2573d90610ec882610300565b91610ed6604051938461025b565b82523d6000602084013e565b606090565b60405190604082018281106001600160401b03821117610f29575b604052601582527422a9219b991aac1d102ab735b737bb9022b93937b960591b6020830152565b610f3161021c565b610f02565b9161037c9360009392849360208451940192f1610f51610eb7565b610f59610ee7565b916114cd565b60009161037c93839260208351930191fa610f51610eb7565b60009161037c93839260208351930191f4610f51610eb7565b815115610ff75760208251920190f0906001600160a01b03821615610fb257565b60405162461bcd60e51b815260206004820152601960248201527f436f756c64206e6f74206465706c6f7920636f6e7472616374000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601d60248201527f6e6f20636f6e74726163742062797465636f64652070726f76696465640000006044820152606490fd5b60009081526001602090808252604083209260405193849282825492611061846111b5565b808752938381169081156110c55750600114611088575b5050505061037c9250038261025b565b815285812095935091905b8183106110ad57505061037c935082010138808080611078565b85548784018501529485019486945091830191611093565b935050505061037c94925060ff191682840152151560051b82010138808080611078565b80518210156110fd5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b91909161111e61141c565b80518351036111615760005b815181101561115b5780611155611143600193856110e9565b5161114e83886110e9565b51906112e7565b0161112a565b50509050565b60405162461bcd60e51b815260206004820152602660248201527f4b657973206c656e677468206e6f7420657175616c20746f2076616c756573206044820152650d8cadccee8d60d31b6064820152608490fd5b90600182811c921680156111e5575b60208310146111cf57565b634e487b7160e01b600052602260045260246000fd5b91607f16916111c4565b9060405191826000825492611203846111b5565b908184526001948581169081600014611270575060011461122d575b5050610da59250038361025b565b9093915060005260209081600020936000915b818310611258575050610da59350820101388061121f565b85548884018501529485019487945091830191611240565b915050610da594506020925060ff191682840152151560051b820101388061121f565b90601f81116112a157505050565b600091825260208220906020601f850160051c830194106112dd575b601f0160051c01915b8281106112d257505050565b8181556001016112c6565b90925082906112bd565b9190916000818152600160209080825260408320918651966001600160401b03881161140f575b6113228861131c86546111b5565b86611293565b81601f8911600114611382575096809281927fcdf4e344c0d23d4cdd0474039d176c55b19d531070dbe17856bfb993a5b5720b9798998794611377575b50501b916000199060031b1c19161790555b604051a2565b01519250388061135f565b909791601f1983169861139a86600052602060002090565b9287905b8b82106113f8575050837fcdf4e344c0d23d4cdd0474039d176c55b19d531070dbe17856bfb993a5b5720b98999a106113df575b505050811b019055611371565b015160001960f88460031b161c191690553880806113d2565b80878596829496860151815501950193019061139e565b61141761021c565b61130e565b6000546001600160a01b0316330361143057565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6000546001600160a01b039182169181169081830361149257505050565b82906001600160601b0360a01b16176000557f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e06000604051a3565b909190156114d9575090565b8151156114e95750805190602001fd5b60405162461bcd60e51b8152602060048201529081906108099060248301906104fc565b1561151457565b60405162461bcd60e51b815260206004820152601960248201527f437265617465323a204661696c6564206f6e206465706c6f79000000000000006044820152606490fd5b9190918047106115ca578151156115865760208251920190f561037c6001600160a01b038216151561150d565b606460405162461bcd60e51b815260206004820152602060248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f6044820152fd5b60405162461bcd60e51b815260206004820152601d60248201527f437265617465323a20696e73756666696369656e742062616c616e63650000006044820152606490fd5b90601f8201809211610d9d57565b1561162457565b60405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b6044820152606490fd5b1561166157565b60405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b6044820152606490fd5b6116ae826116a78161160f565b101561161d565b6116bb828251101561165a565b816116d3575050604051600081526020810160405290565b60405191601f811691821560051b808486010193838501920101905b8084106117075750508252601f01601f191660405290565b90928351815260208091019301906116ef565b9081516020820190818311611774575b1061173757016020015190565b60405162461bcd60e51b8152602060048201526015602482015274746f427974657333325f6f75744f66426f756e647360581b6044820152606490fd5b61177c610d77565b61172a565b3461178857565b34337f7e71433ddf847725166244795048ecf3e3f9f35628254ecbf7360566642334936000604051a3565b90816020910312610137575161037c81610125565b60409061037c9392815281602082015201906104fc565b506040513d6000823e3d90fd5b6000546001600160a01b031691823b156118975761180983611c48565b1561188757604051630b135d3f60e11b81529260209284928391829161183291600484016117c8565b03916001600160a01b03165afa90811561187a575b600091611852575090565b61037c915060203d8111611873575b61186b818361025b565b8101906117b3565b503d611861565b6118826117df565b611847565b506001600160e01b031992915050565b6118a4906118b0926118d7565b6001600160a01b031690565b6001600160a01b03909116036118cb57630b135d3f60e11b90565b6001600160e01b031990565b61037c916118e491611a8d565b91909161190c565b600511156118f657565b634e487b7160e01b600052602160045260246000fd5b611915816118ec565b8061191d5750565b611926816118ec565b600181036119735760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b61197c816118ec565b600281036119c95760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b6119d2816118ec565b60038103611a2a5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608490fd5b80611a366004926118ec565b14611a3d57565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608490fd5b815160418103611aba575090611ab6916020820151906060604084015193015160001a90611b08565b9091565b604003611afe578160406020611ab69401519101519160ff83811c93601b8501809511611af1575b600180831b0316931690611b08565b611af9610d77565b611ae2565b5050600090600290565b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311611bb25760ff16601b81141580611ba7575b611b9b579160809493916020936040519384528484015260408301526060820152600093849182805260015afa15611b8e575b81516001600160a01b03811615611b88579190565b50600190565b611b966117df565b611b73565b50505050600090600490565b50601c811415611b40565b50505050600090600390565b60405160208101906301ffc9a760e01b8252635122dded60e11b602482015260248152611bea81610233565b600092839283925191617530fa90611c00610eb7565b805160208110611c415783611c16575b50505090565b819293509060209181010312611c3d5760200151908115158203610be25750388080611c10565b5080fd5b5050905090565b60405160208101906301ffc9a760e01b8252630b135d3f60e11b602482015260248152611bea81610233565b90602082519201516001600160601b0319908181169360148110611c9757505050565b60140360031b82901b16169150565b602081830312610137578051906001600160401b038211610137570181601f82011215610137578051611cd881610300565b92611ce6604051948561025b565b818452602082840101116101375761037c91602080850191016104d9565b908060209392818452848401376000828201840152601f01601f1916010190565b909260809261037c969460018060a01b03168352602083015260408201528160608201520191611d04565b611d68906020604051928284809451938492016104d9565b810103902090565b60409061037c949281528160208201520191611d0456fea2646970667358221220c2cce3ab6fef91b51abafa7782d03b6ae42b15d0f1b225f3248adc1df1eb943864736f6c63430008100033cdf4e344c0d23d4cdd0474039d176c55b19d531070dbe17856bfb993a5b5720b";

type UniversalProfileConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniversalProfileConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniversalProfile__factory extends ContractFactory {
  constructor(...args: UniversalProfileConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    newOwner: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<UniversalProfile> {
    return super.deploy(newOwner, overrides || {}) as Promise<UniversalProfile>;
  }
  override getDeployTransaction(
    newOwner: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(newOwner, overrides || {});
  }
  override attach(address: string): UniversalProfile {
    return super.attach(address) as UniversalProfile;
  }
  override connect(signer: Signer): UniversalProfile__factory {
    return super.connect(signer) as UniversalProfile__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniversalProfileInterface {
    return new utils.Interface(_abi) as UniversalProfileInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniversalProfile {
    return new Contract(address, _abi, signerOrProvider) as UniversalProfile;
  }
}
